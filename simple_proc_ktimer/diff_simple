39c39
< #define APP     //  select SINGLE, CROSS, PER   (Core partitioning mode)
---
> #define SINGLE     //  select SINGLE, CROSS, PER   (Core partitioning mode)
80,81d79
< int app_start_per[NUMBER_OF_SOCKETS];
< int app_end_per[NUMBER_OF_SOCKETS];
87d84
< int app_util;
92d88
< int app_util_avg[NUMBER_OF_SOCKETS];
100d95
< int app_core_counter;
209c204
< 	    user = system = idle = irq = total =  0;
---
> 	    user = system = idle = irq = 0;
698,881d692
< 
< 
< #ifdef APP
<         queue_util = 0;
<         blk_queue_util = 0;
<         net_queue_util = 0;
<         net_sys_util = 0;
<         app_util = 0;
< 
<         blk_core_counter = 0;
<         net_core_counter = 0;
<         netsys_core_counter = 0;
<         app_core_counter = 0;
< 
<         sum_avg = 0;
<         socket_counter = 0;
< 
<         socket_number = NUMBER_OF_SOCKETS;
< 	int blk_flag=0;
< 	int net_flag=0;
<         int max = 0;
<         int min = 0;
<         for(i = 1 ; i <= socket_number ; i ++){
<             blk_queue_util = 0;
<             blk_core_counter = 0;
<             net_queue_util = 0;
<             net_core_counter = 0;
<             net_sys_util = 0;
<             netsys_core_counter = 0;
<             app_util = 0;
<             app_core_counter = 0;
< 
<             for(j = blk_start_per[NUMBER_OF_SOCKETS - i] ; j <= blk_end_per[NUMBER_OF_SOCKETS - i]; j++){
<                 blk_queue_util += p_dynamic[j];
<                 blk_core_counter = blk_core_counter + 1;
<             }
<             blk_queue_util_avg[NUMBER_OF_SOCKETS - i] = blk_queue_util/blk_core_counter;
<             sum_avg = sum_avg + blk_queue_util_avg[NUMBER_OF_SOCKETS-i];
< 
<             for(j = net_start_per[NUMBER_OF_SOCKETS - i] ; j <= net_end_per[NUMBER_OF_SOCKETS - i]; j++){
<                 net_queue_util += p_dynamic[j];
<                 net_core_counter = net_core_counter + 1;
<             }
<             net_queue_util_avg[NUMBER_OF_SOCKETS - i] = net_queue_util/net_core_counter;
<             sum_avg = sum_avg + net_queue_util_avg[NUMBER_OF_SOCKETS-i];
< 
<             for(j = net_end_per[NUMBER_OF_SOCKETS - i]+1; j < app_start_per[NUMBER_OF_SOCKETS - i] ; j++){
<                 net_sys_util += p_dynamic[j];
<                 netsys_core_counter = netsys_core_counter + 1;
<             }
<             net_sys_util_avg[NUMBER_OF_SOCKETS - i] = net_sys_util/netsys_core_counter;
<             sum_avg = sum_avg + net_sys_util_avg[NUMBER_OF_SOCKETS-i];
< 
< 	    for(j = app_start_per[NUMBER_OF_SOCKETS - i]; j <= app_end_per[NUMBER_OF_SOCKETS - i] ; j++){
<                 app_util += p_dynamic[j];
<                 app_core_counter = app_core_counter + 1;
<             }
<             app_util_avg[NUMBER_OF_SOCKETS - i] = app_util/app_core_counter;
<             sum_avg = sum_avg + app_util_avg[NUMBER_OF_SOCKETS-i];
<         }
<         sum_avg = sum_avg / (socket_number*4);
< 	
< 	max = 0;
< 	min = 0;
< 	
<         for(i = 1 ; i <= socket_number ; i++){
< 	    if(net_queue_util_avg[NUMBER_OF_SOCKETS - i] < net_sys_util_avg[NUMBER_OF_SOCKETS - i]){
< 		max=1;
< 		if(net_sys_util_avg[NUMBER_OF_SOCKETS - i] < app_util_avg[NUMBER_OF_SOCKETS - i]){
< 		    max=2;
< 		    if(app_util_avg[NUMBER_OF_SOCKETS - i] < blk_queue_util_avg[NUMBER_OF_SOCKETS - i]){
< 			max=3;
< 		    }
< 		}
< 		else{
< 		    if(net_sys_util_avg[NUMBER_OF_SOCKETS - i] < blk_queue_util_avg[NUMBER_OF_SOCKETS - i]){
< 			max=3;
< 		    }
< 		}
< 	    }
< 	    else{
< 	        if(net_queue_util_avg[NUMBER_OF_SOCKETS - i] < app_util_avg[NUMBER_OF_SOCKETS - i]){
< 		    max=2;
< 		    if(app_util_avg[NUMBER_OF_SOCKETS - i] < blk_queue_util_avg[NUMBER_OF_SOCKETS - i]){
< 			max=3;
< 		    }
< 		}
< 		else{
< 		    if(net_queue_util_avg[NUMBER_OF_SOCKETS - i] < blk_queue_util_avg[NUMBER_OF_SOCKETS - i]){
< 			max=3;
< 		    }
< 		}
< 	    }
< 
< 	    if(net_queue_util_avg[NUMBER_OF_SOCKETS - i] < net_sys_util_avg[NUMBER_OF_SOCKETS - i]){
<                 if(net_queue_util_avg[NUMBER_OF_SOCKETS - i] < app_util_avg[NUMBER_OF_SOCKETS - i]){
<                     if(net_queue_util_avg[NUMBER_OF_SOCKETS - i] < blk_queue_util_avg[NUMBER_OF_SOCKETS - i]){}
< 		    else {min=3;}
<                 }
<                 else{
< 		    min=2;
<                     if(app_util_avg[NUMBER_OF_SOCKETS - i] > blk_queue_util_avg[NUMBER_OF_SOCKETS - i]){
< 			min = 3;
<                     }
<                 }
<             }
<             else{
< 		min=1;
<                 if(net_sys_util_avg[NUMBER_OF_SOCKETS - i] < app_util_avg[NUMBER_OF_SOCKETS - i]){
<                     if(net_sys_util_avg[NUMBER_OF_SOCKETS - i] < blk_queue_util_avg[NUMBER_OF_SOCKETS - i]){}
< 		    else {min = 3;}
<                 }
<                 else{
< 		    min=2;
<                     if(app_util_avg[NUMBER_OF_SOCKETS - i] > blk_queue_util_avg[NUMBER_OF_SOCKETS - i]){
< 			min=3;
<                     }
<                 }
<             } 
< 	    
< /*
<                 if(T_HIGH < blk_queue_util_avg[i]){
<                     if(blk_queue_util_avg[NUMBER_OF_SOCKETS - i] > net_sys_util_avg[NUMBER_OF_SOCKETS - i]){
<                         if(blk_start_per[NUMBER_OF_SOCKETS - i] - net_end_per[NUMBER_OF_SOCKETS - i] > 3){
<                             blk_start_per[NUMBER_OF_SOCKETS - i] = blk_start_per[NUMBER_OF_SOCKETS - i] - 1;
<                         }
<                     }
<                     else if(blk_queue_util_avg[NUMBER_OF_SOCKETS - i] < net_sys_util_avg[NUMBER_OF_SOCKETS - i]){
<                         if(blk_start_per[NUMBER_OF_SOCKETS - i] != blk_end_per[NUMBER_OF_SOCKETS - i]){
<                             blk_start_per[NUMBER_OF_SOCKETS - i] = blk_start_per[NUMBER_OF_SOCKETS - i] + 1;
<                         }
<                     }
<                 }
<                 else if(blk_queue_util_avg[NUMBER_OF_SOCKETS - i] < T_LOW){
<                     if(blk_end_per[NUMBER_OF_SOCKETS - i] != blk_start_per[NUMBER_OF_SOCKETS - i]){
<                         blk_start_per[NUMBER_OF_SOCKETS - i] = blk_start_per[NUMBER_OF_SOCKETS - i] + 1;
<                     }
<                 }
< */
<         }
< 	if(blk_flag != 0){
< 	    k = 0;
<             i = 0;
<             for(j = 0; j < BLK_QUEUES; j++){
< 
<                 core = blk_start_per[NUMBER_OF_SOCKETS-k-1]+i;
< 
<                 cpumask_clear(&affinity_mask);
<                 cpumask_set_cpu(core, &affinity_mask);
<                 irq_set_affinity_hint(irq_blk[j], &affinity_mask);
< 
<                 if(blk_end_per[NUMBER_OF_SOCKETS-k-1] == blk_start_per[NUMBER_OF_SOCKETS-k-1]+i){
<                     k = k + 1;
<                     k = k % socket_number;
<                     i = 0 ;
<                 }
<                 else{
<                     i = i + 1;
<                 }
<             }
< 	    blk_flag = 0;
< 	}
< 	if(net_flag != 0){
<             k = 0;
<             i = 0;
<             for(j = 0; j < NET_QUEUES; j++) {
<                 core = net_start_per[NUMBER_OF_SOCKETS-k-1]+i;
< 
<                 cpumask_clear(&affinity_mask);
<                 cpumask_set_cpu(core, &affinity_mask);
<                 irq_set_affinity_hint(irq_net[j], &affinity_mask);
< 
<                 if(net_start_per[NUMBER_OF_SOCKETS-k-1] + i == net_end_per[NUMBER_OF_SOCKETS-k-1]){
<                     k = k + 1;
<                     k = k % socket_number;
<                     i = 0 ;
<                 }
<                 else{
<                     i = i + 1;
<                 }
<             }
< 	    net_flag = 0;
< 	}
< #endif
988,1009d798
< #ifdef APP
< static int show_stat_dynamic(struct seq_file *p, void *v)
< {
<     int i = 0 ;
<     for(i = 0 ; i < NUMBER_OF_SOCKETS ; i ++){
<         seq_printf(p, "%d", net_start_per[i]);
<         seq_putc(p, '\n');
<         seq_printf(p, "%d", net_end_per[i]);
<         seq_putc(p, '\n');
<         seq_printf(p, "%d", app_start_per[i]);
<         seq_putc(p, '\n');
<         seq_printf(p, "%d", app_end_per[i]);
<         seq_putc(p, '\n');
<         seq_printf(p, "%d", blk_start_per[i]);
<         seq_putc(p, '\n');
<         seq_printf(p, "%d", blk_end_per[i]);
<         seq_putc(p, '\n');
<     }
<     return 0;
< }
< #endif
< 
1116,1128d904
< 
<     #ifdef APP
<     blk_start_per[0] = 7;
<     blk_end_per[0] = 9;
<     blk_start_per[1] = 17;
<     blk_end_per[1] = 19;
<     net_start_per[0] = 0;
<     net_end_per[0] = 1;
<     net_start_per[1] = 10;
<     net_end_per[1] = 11;
<     app_start_per[0] = 4;
<     app_end_per[1] = 14;
<     #endif
